{
    "title": "More MSX Technical Info from http://bifi.msxnet.org/msxnet/tech/",
    "description": "MSX Technical Info from http://bifi.msxnet.org/msxnet/tech/",
    "toc": [
        {
            "title": "MSX-DOS 2 Program Interface Specification",
            "uri": "msxdocs://msx-dos/MSX-DOS_2_Program_Interface_Specification",
            "external_url": "https://map.grauw.nl/resources/dos2_environment.php",
            "description": "This comprehensive specification document serves as the definitive technical reference for MSX-DOS 2, the advanced disk operating system for MSX2 computers. It details the complete programming interface for developing transient programs, covering the evolution from CP/M and MSX-DOS 1 to the enhanced MSX-DOS 2 system with full backward compatibility. The document encompasses everything from basic program execution environment to advanced memory management, including transient program environment setup, complete MSX-DOS function call specifications, modern file handle systems, File Info Blocks (FIBs) for directory manipulation, environment strings for dynamic configuration, mapper support for extended memory management beyond 64K, VT-52 compatible screen control codes, and comprehensive error handling mechanisms."
        },
        {
            "title": "MSX-DOS 2 Function Specifications",
            "uri": "msxdocs://msx-dos/MSX-DOS_2_Function_Specifications",
            "external_url": "https://map.grauw.nl/resources/dos2_functioncalls.php",
            "description": "This document provides a comprehensive specification of MSX-DOS 2 function calls (version 2.20), detailing over 90 system functions accessible via two calling methods: CALL 00005h for MSX-DOS environment programs and CALL 0F37Dh for disk BASIC programs. The functions are categorized by compatibility level (CPM for CP/M 2.2 compatibility, MSX1 for MSX-DOS version 1 compatibility, and NEW for MSX-DOS 2 exclusive features) and cover essential system operations including file management (FCB and file handle based), directory operations, disk I/O, console I/O, memory management, process control, and device handling. Each function is thoroughly documented with parameters, return values, error conditions, and implementation details, making this an indispensable reference for MSX software development, system programming, and understanding the MSX-DOS operating system interface for both legacy compatibility and modern MSX development workflows."
        }
    ]
}